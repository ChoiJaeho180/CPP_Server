GameServer의 스레드는 IOCP 처리, 게임 로직, TaskQueue 실행 등을 동시에 처리하는 만능형 워커 스레드 구조로 설계되어 있습니다.

일반적으로 DB 쿼리는 SQLExecDirectW처럼 동기 방식으로 처리되는 것이 보편적인데, 이 구조를 그대로 GameServer에 포함시킬 경우, 워커 스레드가 DB I/O에 블로킹되어 전체 프레임 처리 성능이 떨어질 수 있다고 판단했습니다.

그래서 실무에서 많이 쓰이는 구조처럼, DB 작업은 별도의 DBServer 프로세스로 분리하고, GameServer와는 비동기 메시지 큐(TCP 또는 내부 IPC)를 통해 통신하도록 구현했습니다.

이로 인해 GameServer는 DB 작업이 완료되기를 기다리지 않고, 논리와 IO는 그대로 유지하면서 전체 시스템적으로는 완전한 비동기 구조를 갖게 되었습니다.

결과적으로,

GameServer는 TPS(초당 처리량)를 유지하면서 안정적인 게임 로직 실행이 가능하고,

DBServer는 멀티스레드 기반으로 처리량과 안정성을 분리하여 관리할 수 있으며,

시스템 전체는 성능 + 안정성 + 확장성을 고루 갖춘 구조로 완성되었습니다.

